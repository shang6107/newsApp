<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxgc.news_app.core.mapper.managerment_system_mapper.NewsManagermentDao">

    <update id="updateReleaseById">
        UPDATE `release`
        <set>
            <if test="status !=null">
                `status`=#{status.status},
            </if>
            <if test="newTypeId!= null">
                news_type_id=#{newTypeId.id},
            </if>
        </set>
        where id=#{id}
    </update>

    <resultMap id="news_result" type="com.cxgc.news_app.core.model.News">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="url" column="URL"/>
        <result property="accessCount" column="access_count"/>
        <result property="createTime" column="create_time"/>
        <association property="type" column="news_type_id" select="getNewsTypeById"/>
    </resultMap>

    <select id="selectAllNews" resultMap="news_result">
        select * from news
    </select>


    <resultMap id="release_result" type="com.cxgc.news_app.core.model.Release">
        <id property="id" column="id"/>
        <result property="createTime" column="create_time"/>
        <result property="path" column="path"/>
        <result property="accessCount" column="access_count"/>
        <result property="title" column="title"/>
        <result property="status" column="status"
                typeHandler="com.cxgc.news_app.core.config.mybatis.ReleaseTypeHandler"/>

        <association property="userId" javaType="com.cxgc.news_app.core.model.User">
            <id property="id" column="userId"/>
            <result property="phoneNum" column="phone_num"/>
            <result property="nickName" column="nick_name"/>
            <result property="password" column="password"/>
            <result property="headImg" column="head_img"/>
            <result property="gender" column="gender"/>
            <result property="address" column="address"/>
            <result property="hobby" column="Hobby"/>
            <result property="birth" column="birth"/>
            <result property="introduce" column="introduce"/>
            <result property="lastTime" column="last_time"/>
            <result property="status" column="status"
                    typeHandler="com.cxgc.news_app.core.config.mybatis.UserStatusTypeHandler"/>
            <result property="typeName" column="type_name"
                    typeHandler="com.cxgc.news_app.core.config.mybatis.UserTypeHandler"/>
            <result property="createTime" column="create_time"/>
        </association>
        <association property="newTypeId" column="news_type_id" select="getNewsTypeById"/>
    </resultMap>

    <insert id="addRelease" parameterType="com.cxgc.news_app.core.model.Release">
        insert into release(id,create_time,path,user_id,access_count,new_type_id,title,status)
        values(#{release.id},#{release.create_time},#{release.path},#{release.user_id},#{release.access_count},#{release.new_type_id},#{release.title},#{release.status})
    </insert>

    <delete id="deleteNewsById" parameterType="com.cxgc.news_app.core.model.Release">
     DELETE FROM news where id=#{0}
    </delete>
    <select id="updateRelease" resultMap="release_result">
select * from `release` as r join users as u on r.user_Id=u.id where not r.`status`=2
</select>
    <select id="selectRelease" resultMap="release_result">
select * from `release` as r join users as u on r.user_Id=u.id where r.`status`=2
    </select>

    <select id="selectReleaseById" resultMap="release_result">
        select r.*,u.nick_name from `release` as r join users as u on r.user_Id=u.id WHERE r.id=#{id}
    </select>

    <resultMap id="newsTypeResult" type="com.cxgc.news_app.core.model.NewsType">
        <id property="id" column="id"/>
        <result property="typeName" column="type_name"/>
        <result property="typeDesc" column="type_desc"/>
    </resultMap>

    <select id="getNewsTypeById" resultMap="newsTypeResult">
        select * from news_type where id = #{0}
    </select>


    <!--####################新闻数据统计#######################-->
    <resultMap id="sociology" type="map">
        <result column="sociology" property="sociology"/>
    </resultMap>
    <resultMap id="sport" type="map">
        <result column="sport" property="sport"/>
    </resultMap>
    <resultMap id="entertainment" type="map">
        <result column="entertainment" property="entertainment"/>
    </resultMap>
    <resultMap id="finance" type="map">
        <result column="finance" property="finance"/>
    </resultMap>
    <resultMap id="technology" type="map">
        <result column="technology" property="technology"/>
    </resultMap>
    <resultMap id="NewsCount" type="map">
        <result column="NewsCount" property="NewsCount"/>
    </resultMap>
    <resultMap id="ReleaseCount" type="map">
        <result column="ReleaseCount" property="ReleaseCount"/>
    </resultMap>


    <select id="NewsCount" resultMap="NewsCount">
    select count(1) as counts from news where news_type_id is not NULL
</select>
    <select id="ReleaseCount" resultMap="ReleaseCount">
      select count(1) as counts from `release` where news_type_id is not NULL
</select>
    <select id="sociology" resultMap="sociology">
SELECT t.news_type_id as id2,t.type_name as typeName,(t1.ac+t.ac) as access_counts,(t.counts+t1.counts) as counts
FROM (

    SELECT news_type_id,nt.type_name,sum(access_count) as ac,count(1) as counts
    FROM news n JOIN news_type nt on n.news_type_id = nt.id
    where news_type_id is NOT NULL GROUP BY news_type_id
)t

JOIN (
    SELECT news_type_id,nt.type_name as type_name,sum(access_count) as ac ,count(1) as counts
    FROM `release` r join news_type nt on r.news_type_id = nt.id
    where news_type_id is NOT NULL GROUP BY news_type_id
)t1
ON t.news_type_id = t1.news_type_id
where t.news_type_id=1
    </select>
    <select id="sport" resultMap="sport">
   SELECT t.news_type_id as id2,t.type_name as typeName,(t1.ac+t.ac) as access_counts,(t.counts+t1.counts) as counts
FROM (

    SELECT news_type_id,nt.type_name,sum(access_count) as ac,count(1) as counts
    FROM news n JOIN news_type nt on n.news_type_id = nt.id
    where news_type_id is NOT NULL GROUP BY news_type_id
)t

JOIN (
    SELECT news_type_id,nt.type_name as type_name,sum(access_count) as ac ,count(1) as counts
    FROM `release` r join news_type nt on r.news_type_id = nt.id
    where news_type_id is NOT NULL GROUP BY news_type_id
)t1
ON t.news_type_id = t1.news_type_id
where t.news_type_id=2
</select>
    <select id="entertainment" resultMap="entertainment">
SELECT t.news_type_id as id2,t.type_name as typeName,(t1.ac+t.ac) as access_counts,(t.counts+t1.counts) as counts
FROM (

    SELECT news_type_id,nt.type_name,sum(access_count) as ac,count(1) as counts
    FROM news n JOIN news_type nt on n.news_type_id = nt.id
    where news_type_id is NOT NULL GROUP BY news_type_id
)t

JOIN (
    SELECT news_type_id,nt.type_name as type_name,sum(access_count) as ac ,count(1) as counts
    FROM `release` r join news_type nt on r.news_type_id = nt.id
    where news_type_id is NOT NULL GROUP BY news_type_id
)t1
ON t.news_type_id = t1.news_type_id
where t.news_type_id=3
    </select>
    <select id="finance" resultMap="finance">
SELECT t.news_type_id as id2,t.type_name as typeName,(t1.ac+t.ac) as access_counts,(t.counts+t1.counts) as counts
FROM (

    SELECT news_type_id,nt.type_name,sum(access_count) as ac,count(1) as counts
    FROM news n JOIN news_type nt on n.news_type_id = nt.id
    where news_type_id is NOT NULL GROUP BY news_type_id
)t

JOIN (
    SELECT news_type_id,nt.type_name as type_name,sum(access_count) as ac ,count(1) as counts
    FROM `release` r join news_type nt on r.news_type_id = nt.id
    where news_type_id is NOT NULL GROUP BY news_type_id
)t1
ON t.news_type_id = t1.news_type_id
where t.news_type_id=4
    </select>
    <select id="technology" resultMap="technology">
SELECT t.news_type_id as id2,t.type_name as typeName,(t1.ac+t.ac) as access_counts,(t.counts+t1.counts) as counts
FROM (

    SELECT news_type_id,nt.type_name,sum(access_count) as ac,count(1) as counts
    FROM news n JOIN news_type nt on n.news_type_id = nt.id
    where news_type_id is NOT NULL GROUP BY news_type_id
)t

JOIN (
    SELECT news_type_id,nt.type_name as type_name,sum(access_count) as ac ,count(1) as counts
    FROM `release` r join news_type nt on r.news_type_id = nt.id
    where news_type_id is NOT NULL GROUP BY news_type_id
)t1
ON t.news_type_id = t1.news_type_id
where t.news_type_id=5
    </select>

    <!-- <select id="getMaxCountOfNewsType" resultType="">
 SELECT t.type_name as typeName,(t1.ac+t.ac) as access_counts
 FROM (

     SELECT news_type_id,nt.type_name,sum(access_count) as ac,count(1) as counts
     FROM news n JOIN news_type nt on n.news_type_id = nt.id
     where news_type_id is NOT NULL GROUP BY news_type_id
 )t

 JOIN (
     SELECT news_type_id,nt.type_name as type_name,sum(access_count) as ac ,count(1) as counts
     FROM `release` r join news_type nt on r.news_type_id = nt.id
     where news_type_id is NOT NULL GROUP BY news_type_id
 )t1
 ON t.news_type_id = t1.news_type_id
 where t.news_type_id is NOT NULL GROUP BY t.news_type_id

 ORDER BY access_counts
 DESC
      LIMIT 1
     </select>
     <select id="getMinCountOfNewsType" resultType="">
     SELECT t.type_name as typeName,(t1.ac+t.ac) as access_counts
 FROM (

     SELECT news_type_id,nt.type_name,sum(access_count) as ac,count(1) as counts
     FROM news n JOIN news_type nt on n.news_type_id = nt.id
     where news_type_id is NOT NULL GROUP BY news_type_id
 )t

 JOIN (
     SELECT news_type_id,nt.type_name as type_name,sum(access_count) as ac ,count(1) as counts
     FROM `release` r join news_type nt on r.news_type_id = nt.id
     where news_type_id is NOT NULL GROUP BY news_type_id
 )t1
 ON t.news_type_id = t1.news_type_id
 where t.news_type_id is NOT NULL GROUP BY t.news_type_id

 ORDER BY access_counts
      LIMIT 1
     </select>
    <select id="getTop10News" resultMap="">
 SELECT n.*,access_count from news  n ORDER BY access_count DESC
      LIMIT 10
     </select>
     <select id="getTop10Release" resultMap="">
 SELECT r.*,access_count from `release`  r ORDER BY access_count DESC
      LIMIT 10
     </select>-->
</mapper>




