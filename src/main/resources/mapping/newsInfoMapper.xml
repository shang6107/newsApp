<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxgc.news_app.core.mapper.news_mapper.NewsDao">

    <resultMap id="newsHistory" type="com.cxgc.news_app.core.model.History">
        <result property="news.id" column="id"/>
        <result property="news.title" column="title"/>
        <result property="news.accessCount" column="access_count"/>
        <result property="news.author" column="author" />
        <result property="news.createTime" column="create_time"/>
        <result property="news.type.typeName" column="type_name" />
    </resultMap>

    <select id="getNews" resultMap="oneNews">
        select title,url,news_type_id,access_count,create_time,author from news where id=#{id}
    </select>
    <resultMap id="oneNews" type="news">
       <result property="id" column="id"/>
        <result property="title" column="title"/>
       <result property="url" column="URL"/>
       <result property="accessCount" column="access_count"/>
       <result property="createTime" column="create_time"/>
        <result property="author" column="author"/>
       <association property="type" column="news_type_id"
                    select="com.cxgc.news_app.core.mapper.managerment_system_mapper.NewsManagermentDao.getNewsTypeById"
                    javaType="com.cxgc.news_app.core.model.NewsType"/>
   </resultMap>


    <resultMap id="allComment" type="comment">
        <result property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="goodCount" column="good_count"/>
        <result property="newsId" column="news_id"/>
        <result property="createTime" column="create_time"/>
        <association property="userId" column="user_id" select="com.cxgc.news_app.core.mapper.user_mapper.UserMapper.getUserById" javaType="com.cxgc.news_app.core.model.User"/>
    </resultMap>

    <select id="getAllCommentByNewsId" resultMap="allComment">
        select * from comment where news_id=${id} limit ${startNo},${size}
    </select>

    <select id="getCommentNum" resultType="int">
        select count(*) from comment where news_id=#{id}
    </select>

    <select id="getCommentByNewIdAndUserId" resultMap="allComment">
        select * from comment where user_id=#{userId.id} and news_id=#{newsId}
    </select>

    <select id="checkCollection" resultType="collections">
        select * from collections where news_id=#{newsId.id} and user_id=#{userId}
    </select>

    <!--发布评论-->
    <insert id="putIntoComment" parameterType="com.cxgc.news_app.core.model.Comment">
        insert into comment values(#{id},#{content},#{goodCount},#{newsId},#{userId.id},#{createTime})
    </insert>

    <!--更新评论-->
    <update id="updateComment" parameterType="comment">
        update comment set content=#{content} where id=#{id}
    </update>

    <!--删除评论-->
    <delete id="outPutComment" parameterType="comment">
        delete from comment where id=#{id} and user_id=#{userId.id}
    </delete>

    <!--收藏-->
    <insert id="inputCollection" parameterType="com.cxgc.news_app.core.model.Collections">
        insert into collections(id,news_id,user_id,create_time) values(#{id},#{newsId.id},#{userId},#{createTime})
    </insert>

    <!--取消收藏-->
    <delete id="outPutCollection" parameterType="collections">
        delete from collections where user_Id=#{userId} and news_Id=#{newsId.id}
    </delete>

    <!--点赞-->
    <update id="putonGood" parameterType="comment">
        update comment set good_count=#{goodCount} where news_id=#{newsId} and id=#{id}
    </update>

    <!--用户的历史浏览记录-->
    <select id="userNewsHistory" parameterType="String" resultMap="newsHistory">
        select n.id,h.create_time,n.title,n.access_count,n.author,t.type_name from history h
        LEFT JOIN news n on
        h.news_id=n.id
        LEFT JOIN news_type t ON
        n.news_type_id = t.id
        where h.user_id = #{id}
    </select>

    <!--举报-->
    <insert id="putonReport" parameterType="report">
        insert into report values(#{id},#{reporterId},#{reportedId},#{reportedContent},#{createTime})
    </insert>

    <!--取消举报-->
    <delete id="putoutReport" parameterType="String" >
        delete from report where id=#{id}
    </delete>

    <!--核对举报信息-->
    <select id="checkReport" parameterType="report" resultType="String">
        select id from report where reporter_id=#{reporterId} and reported_id=#{reportedId}
    </select>

    <!--获得用户对象-->
    <select id="getUserById" parameterType="String" resultType="user">
        select * from users where id=#{id}
    </select>

</mapper>